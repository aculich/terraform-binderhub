runcmd:
  # BinderHub  
  - su ${admin_user} -c "/tmp/install-binderhub.sh"

write_files:
  - path: /tmp/install-binderhub.sh
    permissions: 0755
    content: |
      kubectl create -f /tmp/pv.yaml
      sudo helm install --name kube-lego --namespace=support  stable/kube-lego -f /tmp/kube-lego.yaml
      sudo helm repo add jupyterhub https://jupyterhub.github.io/helm-chart
      sudo helm repo update
      sudo helm install jupyterhub/binderhub --version=v0.1.0-85ac189 \
          --name=binderhub --namespace=binderhub -f /tmp/binderhub.yaml

  - path: /tmp/kube-lego.yaml
    content: |
      ## kube-lego configuration
      ## Ref: https://github.com/jetstack/kube-lego
      ##
      config:
        ## Email address to use for registration with Let's Encrypt
        ##
        LEGO_EMAIL: ${TLS_email}

        ## Let's Encrypt API endpoint
        ## Production: https://acme-v01.api.letsencrypt.org/directory
        ## Staging: https://acme-staging.api.letsencrypt.org/directory
        ##
        LEGO_URL: https://acme-v01.api.letsencrypt.org/directory

        ## Specify which ingress class to watch
        ##
        LEGO_SUPPORTED_INGRESS_CLASS: nginx

        ## Specify which ingress provider should be watched
        ## nginx and gce are the only two options presently
        ##
        LEGO_SUPPORTED_INGRESS_PROVIDER: nginx

        ## Specify what ingress class should something be
        ## if no ingress class is specified
        ##
        LEGO_DEFAULT_INGRESS_CLASS: nginx

      ## rbac creates the correct permissions
      rbac:
        create: true

  - path: /tmp/binderhub.yaml
    content: |
      jupyterhub:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/tls-acme: "true"
          hosts:
            - ${jupyter_domain}
          tls:
            - hosts:
              - ${jupyter_domain}
              secretName: kubelego-tls-jupyterhub
        hub:
          nodeSelector:
            kubernetes.io/hostname: master
          services:
            binder:
              apiToken: "${api_token}"
        proxy:
          nodeSelector:
            kubernetes.io/hostname: master
          service:
            type: NodePort
          secretToken: "${secret_token}"
        singleuser:
          memory:
             guarantee: ${mem_alloc}G
          cpu:
             guarantee: ${cpu_alloc}

      # BinderHub config
      hub:
        nodeSelector:
          kubernetes.io/hostname: master
        url: https://${jupyter_domain}
      service:
        type: NodePort
      storage:
        capacity: 2G
      ingress:
        enabled: true
        hosts:
          - ${binder_domain}
        annotations:
          kubernetes.io/ingress.class: nginx
        https:
          enabled: true
          type: kube-lego
      build:
        nodeSelector:
          kubernetes.io/hostname: master

  - path: /tmp/pv.yaml
    content: |
      kind: PersistentVolume
      apiVersion: v1
      metadata:
        name: pvc-db-hub
        labels:
          type: local
      spec:
        capacity:
          storage: 1Gi
        accessModes:
          - ReadWriteOnce
        hostPath:
          path: "/shared"
